// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.net.MalformedURLException;
import java.net.URL;

/*
 * Créez une nouvelle ClassDeTest.java dans src/test/java
2. À partir des méthodes de l’interface WebDriver naviguez sur l’url suivante : « https://latavernedutesteur.fr »
3. Maximisez la page de votre navigateur
4. Récupérez le titre de la page et affichez le en console afin de vérifier qu’il est bien celui attendu (à savoir : « La taverne du
testeur »
5. Utilisez une Assertion pour vérifier le titre attendu.
6. Mettre l’Assertion en échec et vérifier le message d’erreur dans la console Junit
7. Fermez le navigateur

Astuce (4) : System.out.println("le titre de la page est : " + driver…());
 */
public class WaitTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
	System.setProperty("webdriver.gecko.driver", "C:\\Users\\Formation\\Downloads\\geckodriver.exe");
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void test() {
    driver.get("https://katalon-demo-cura.herokuapp.com/");

    driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

//    System.out.println("start wait " + new Date());
//    try {
//      driver.findElement(By.xpath("//a[@id=\"btn-make-appointmentdddd\"]")).click();
//    } catch(Exception e) {
//        System.out.println("end wait " + new Date());
//    	e.printStackTrace();
//    }
    
    
    System.out.println("start wait explicite " + new Date());
    
    // Instanciation de l’explicit wait
    WebDriverWait wait = new WebDriverWait(driver, 1);
    // Ex : attendre qu’un élément soit cliquable
    try {
    	WebElement webElement = wait.until(ExpectedConditions.elementToBeClickable(By.id("btnLogin")));
    } catch(Exception e) {
        System.out.println("end wait explicite " + new Date());
    	e.printStackTrace();
    }
    
    
    // btn-make-appointment
    driver.findElement(By.xpath("//a[@id=\"btn-make-appointment\"]")).click();
 
    System.out.println("Fin de test");
    /*
    driver.findElement(By.cssSelector("#menu-item-8 > a")).click();
    driver.findElement(By.cssSelector("#menu-item-898 > a")).click();
    driver.findElement(By.cssSelector("#menu-item-103 > a")).click();
    
    assertThat(driver.findElement(By.cssSelector(".entry-title")).getText(), is("LIENS UTILES"));
     */
    
    //assertEquals("Invalide title", "La taverne du testeur xxx", driver.getTitle());
  }
}
